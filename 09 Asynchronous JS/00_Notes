## Asynchronous JavaScript

In this module, we take a look at asynchronous JavaScript, why it is important, and how it can be used to effectively handle potential blocking operations, such as fetching resources from a server.

## Callbacks

An event handler is a particular type of callback. A callback is just a function that's passed into another function, with the expectation that the callback will be called at the appropriate time. As we just saw, callbacks used to be the main way asynchronous functions were implemented in JavaScript.

Calling a function inside another function is a callback function

## Learning pattern

1. What is synchronous programming?
2. What is Asynchronous programming?
3. Callbacks
4. Callback Hell
5. Promises
6. Async/Await - return promises

Asynchronous Programming - Asynchronous Programming is a process that allows an application to run a second set of instructions while focusing on its primary or basis process.

## HTTP response status codes

Informational responses (100 – 199)
Successful responses (200 – 299)
Redirection messages (300 – 399)
Client error responses (400 – 499)
Server error responses (500 – 599)
